(function(){"use strict";const e="SiteSettings";function t(){try{const t=localStorage.getItem(e),n={prefersReducedMotion:"auto"},s=t?JSON.parse(t):{};return{...n,...s}}catch(e){return console.error("Failed to parse settings from localStorage:",e),{prefersReducedMotion:"auto"}}}function s(t){try{localStorage.setItem(e,JSON.stringify(t))}catch(e){console.error("Failed to save settings to localStorage:",e)}}function n(){const o=document.getElementById("settings-menu-button"),n=document.getElementById("settings-dialog"),i=document.getElementById("settings-close-button"),e=document.getElementById("reduced-motion-select"),a=document.getElementById("os-preference-info");if(!o||!n||!i||!e||!a){console.error("Settings Menu: A required element was not found in the DOM.");return}const r=window.matchMedia("(prefers-reduced-motion: reduce)").matches;if(r)e.value="true",e.disabled=!0,a.style.display="block";else{const n=t();e.value=n.prefersReducedMotion}o.addEventListener("click",e=>{e.preventDefault(),n.style.display="flex"}),i.addEventListener("click",()=>{n.style.display="none"}),window.addEventListener("click",e=>{e.target===n&&(n.style.display="none")}),e.addEventListener("change",()=>{const o=e.value,n=t();n.prefersReducedMotion=o,s(n),console.log("Settings updated:",n),window.dispatchEvent(new CustomEvent("settings-updated",{detail:n}))})}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",n):n()})()